{
	"name": "empdept",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empdatasetjoin",
						"type": "DatasetReference"
					},
					"name": "empdata"
				},
				{
					"dataset": {
						"referenceName": "deptdatadataset",
						"type": "DatasetReference"
					},
					"name": "dept"
				},
				{
					"dataset": {
						"referenceName": "empdatasetjoin",
						"type": "DatasetReference"
					},
					"name": "empdatasplit"
				},
				{
					"dataset": {
						"referenceName": "empdatasetjoin",
						"type": "DatasetReference"
					},
					"name": "empdataunion"
				},
				{
					"dataset": {
						"referenceName": "empdatasetjoin",
						"type": "DatasetReference"
					},
					"name": "empdatalookup"
				},
				{
					"dataset": {
						"referenceName": "empdatasetjoin",
						"type": "DatasetReference"
					},
					"name": "empdatasort"
				},
				{
					"dataset": {
						"referenceName": "empdataset2",
						"type": "DatasetReference"
					},
					"name": "attdatafile"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "empdeptpoutput",
						"type": "DatasetReference"
					},
					"name": "emdeptoutput"
				},
				{
					"dataset": {
						"referenceName": "filteroutputdataflow",
						"type": "DatasetReference"
					},
					"name": "filterdatasetemp"
				}
			],
			"transformations": [
				{
					"name": "joinempdept"
				},
				{
					"name": "ModifyColumns1",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "empdatagregate"
				},
				{
					"name": "ConditionalSplit1emp"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Exists1"
				},
				{
					"name": "Union1"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "Sort1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Pivot1"
				},
				{
					"name": "Window1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "SurrogateKey1"
				}
			],
			"script": "parameters{\n\tfilter as string ('100')\n}\nsource(output(\n\t\tempid as string,\n\t\tempname as string,\n\t\tsalary as string,\n\t\tdeptid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> empdata\nsource(output(\n\t\tdeptno as string,\n\t\tdeptname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> dept\nsource(output(\n\t\tempid as string,\n\t\tempname as string,\n\t\tsalary as string,\n\t\tdeptid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> empdatasplit\nsource(output(\n\t\tempid as string,\n\t\tempname as string,\n\t\tsalary as string,\n\t\tdeptid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> empdataunion\nsource(output(\n\t\tempid as string,\n\t\tempname as string,\n\t\tsalary as string,\n\t\tdeptid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> empdatalookup\nsource(output(\n\t\tempid as string,\n\t\tempname as string,\n\t\tsalary as string,\n\t\tdeptid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> empdatasort\nsource(output(\n\t\tempid as string,\n\t\tname as string,\n\t\tgender as string,\n\t\tsalary as integer,\n\t\tdepartment as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> attdatafile\ndept, ModifyColumns1 join(deptid == deptno,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> joinempdept\nExists1 derive(empname = upper(empname)) ~> ModifyColumns1\nModifyColumns1 filter(equals(empid,'$filter')) ~> Filter1\nFilter1 aggregate(groupBy(empid),\n\tempcount = count(empname)) ~> empdatagregate\nempdatasplit split(equals(empid,'100'),\n\tequals(empid,'200'),\n\tequals(empid,'300'),\n\tdisjoint: false) ~> ConditionalSplit1emp@(emp1, emp2, emp3, others)\njoinempdept derive(empname = upper(empname),\n\t\tempname1 = iif(isNull(empname),'NISHIKA',upper(empname))) ~> DerivedColumn1\nempdata, dept exists(deptid == deptno,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nempdataunion, dept union(byName: true)~> Union1\nempdatalookup, dept lookup(deptid == deptno,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nempdatasort sort(desc(empid, true)) ~> Sort1\nempdataunion select(mapColumn(\n\t\tempid,\n\t\tempname,\n\t\tsalariesemployees = salary,\n\t\tdeptno = deptid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nempdataunion pivot(groupBy(empid),\n\tpivotBy(empid),\n\tcount = count(empid),\n\tcolumnNaming: '$V$N',\n\tlateral: true) ~> Pivot1\nattdatafile window(over(department),\n\tdesc(salary, true),\n\tAverageSalary = avg(salary),\n\t\tdenserank = denseRank()) ~> Window1\nattdatafile alterRow(deleteIf(department=='hr')) ~> AlterRow1\nUnion1 keyGenerate(output({seq no} as long),\n\tstartAt: 1000L) ~> SurrogateKey1\nDerivedColumn1 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['empdeptjoinop'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> emdeptoutput\nempdatagregate sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['filteroutputdataflow'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> filterdatasetemp"
		}
	}
}